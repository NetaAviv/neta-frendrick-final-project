name: Test and Deploy Status Page

on:
  push:
    branches:
      - test
  workflow_dispatch:

env:
  REPO_URI: 992382545251.dkr.ecr.us-east-1.amazonaws.com/neta-fred/final-project
  AWS_REGION: us-east-1

jobs:
  build-and-test:
    runs-on: self-hosted

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get Latest Version Number
        id: get-version
        run: |
          # Find the latest version of the status-page image
          LATEST_VERSION=$(aws ecr describe-images --repository-name neta-fred/final-project \
            --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageTags[0]' \
            --output text 2>/dev/null | grep -o 'version-[0-9]*' || echo "version-0")

          # Extract the number and increment
          VERSION_NUMBER=$(echo $LATEST_VERSION | grep -o '[0-9]*' | awk '{print $1+1}')
          NEW_VERSION="version-$VERSION_NUMBER"

          # Save version for later steps
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Set up Docker Compose and Build
        run: docker-compose -f stuff/compose.yaml build

      - name: Run Docker Containers with Compose
        run: docker-compose -f stuff/compose.yaml up -d

      - name: Wait for the App to Start
        run: sleep 180

      - name: Check Docker Containers
        run: docker ps -a

      - name: Check status-page logs
        run: docker logs status-page

      - name: Test Application with cURL
        run: |
          curl -fkL http://<EC2_PUBLIC_IP>:<PORT> || exit 1  # Replace with actual EC2 IP and exposed port

  push-to-ecr:
    needs: build-and-test
    runs-on: self-hosted

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          region: ${{ env.AWS_REGION }}

      - name: Build and Push status-page Image to ECR
        run: |
          docker tag status-page:latest $REPO_URI/status-page:$NEW_VERSION
          docker push $REPO_URI/status-page:$NEW_VERSION

      - name: Stop and Remove Containers
        run: docker-compose -f stuff/compose.yaml down
